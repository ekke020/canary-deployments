---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRTlQzdGR4TGxMQno1aVpGQUs2eExnREFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV5TVRZeE1qTTJNRGhhRncweU16RXlNVFl4TWpNMk1EaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMXJwSVNmYUd3bldNSzlhTlJEVzNaaS9OaXgyOXNFb053ZGFZbHE1cFNYU1dHd09ITE1ZVQovc1ErSjFGYmF6cnBvai9GWW5zSXJOVGdjaENoZU5HdEJzVEdPV3p4Mzh0NHFsbXNCS1JPRkUvbWlJSUpsc2R6ClZZbWg3R3Jza05ZVURkY2loUE1weTBoa0drbEw5azkrSU1USTFBVERnN1E2V0NmZ3VTTGJGbitQUUI0cWZUMUcKYU1KOG81QVpVWVdCdDhjeDVwbWUvanVTQ3hiSmRFSTVucXZvNmZDelVMTW1BREN5ZHBYbGVpcFdqWVhVL3BETQpCMmppSkpGcDRUa1h3ZDJaZ2tkc0xYczNnZjY1bGtSWWo1cFE3L0tFMWllcHZiSkwwVWo5akNIYlp5WjYvS0ZnCm5RUW96ZVhJdTFwK2VwSXRsZUpWdXBCcGxJZEk4T29FUndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUhoNFdySFpQWW9sNlpVcTVxbFc5T0w3eVQ2NlRqWHhMUklLbHNITmF2UkgKSkN5b2tNU3FxelpZZE96M3NuOG1PRVpsTUpvZ1g4akFYYk91ZHhPRmRXcE9SOHN2T0oyMmM3bWtzYVVYeVpZQwpVVTJEZnpkSzZkMzdzV0NHYjZPbmZFOGJnYUc2NE9tVUZYOGFLMTg2aXZZRWdjSzlYYVpEczl6OW5PNzZ5NUdZCksybXNHRDZUK3k0NTRzOXhKeHNDWWZKK1ZiN0lhYlNOWGN3NkJmcHBLNGdzeFZTRWxidk14UFRaYXF6dGhReHkKNmJLZUVsZ2ZPcVA5dVdhODlqU2JwMXNsM3FjUmJLVjJYKzVzSGRma2ZFSTBiM3lEdXJUWVRkUkdOQU1BTStzagovT05LSjUvenBjSjBSSEhaVDhCSkxYZWRRK1g2U1dXSjYvck5nYnRpOTZVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMXJwSVNmYUd3bldNSzlhTlJEVzNaaS9OaXgyOXNFb053ZGFZbHE1cFNYU1dHd09ICkxNWVUvc1ErSjFGYmF6cnBvai9GWW5zSXJOVGdjaENoZU5HdEJzVEdPV3p4Mzh0NHFsbXNCS1JPRkUvbWlJSUoKbHNkelZZbWg3R3Jza05ZVURkY2loUE1weTBoa0drbEw5azkrSU1USTFBVERnN1E2V0NmZ3VTTGJGbitQUUI0cQpmVDFHYU1KOG81QVpVWVdCdDhjeDVwbWUvanVTQ3hiSmRFSTVucXZvNmZDelVMTW1BREN5ZHBYbGVpcFdqWVhVCi9wRE1CMmppSkpGcDRUa1h3ZDJaZ2tkc0xYczNnZjY1bGtSWWo1cFE3L0tFMWllcHZiSkwwVWo5akNIYlp5WjYKL0tGZ25RUW96ZVhJdTFwK2VwSXRsZUpWdXBCcGxJZEk4T29FUndJREFRQUJBb0lCQUJ4Qmh5RzBmeWMzc0twVQpJV0xJYnNuVG9JaWQ4VWd4ZG4zN2J6amsycFgvOFlDOGhoMHVNN1VTdmRzT3Fha0NwNXZpS0djOUtYY1V6RFEyClhBazZEanJGeWcva2RpK3M1c1FENk03emtCSzhNT25sc3IxVW9haXY0ODdvZ3hqTUV2ZC9SOXVXNC9rTUhhQVgKNVJjVWZ0UnhFTHhWcENUQW9xelhFb3RLT3VwS3dSckdhc0g2dWNEa0NrNktSVkFsZGdRWHNGSWVpSGMrSVpDMAp3NU5EaU5TelV5T1phbm5ZSitEZlZRTnlybGl1eVRNKzZFcVE3L2dVa3M2Tmp3MC8xRDFrWjdCeERzUldZTXovCmJIV01waGFKMERjQlovVTY5UFVJcHBCYi9uUGFlUXZOWDVVbVZmdTRzTlZ0YXhwekIwczhPdTR3NmpqcDZNNE4KandaUEVZRUNnWUVBOVNFZjVDbTh4NnluZzFaRExndGsySys2UUYrNE5kNFhSSUJIZy8wR1V5UXpmSWtnZHljOAorb3lqdzdYQm16STkvTGVoV0RvbDlXWGdDMTMvZXN5dmt0Sm9CaVd2NXZUbXVpNStlRWtyRWUwbDBLaXlSTmNTCm9WTkUvcmVCQjYyNm1UUXVaREdxd016b3dtNS9RV0hkQ2xMYkd4OGwzcUpQTXlGaitFNy95TlVDZ1lFQTRFQUUKU08wNVlQRmRuQ0pyTTZIeTRiNEdvMWZrNVdSVzNJbXIvMmpHT2t6OUxYcVFMR1JIR1NLWUtDUGR2R2hPSXE0NwpEN2krbDZ0ZnEzWkt3eEJMdXltZk9JQnR2M3JydW42M0VhaCtrZzYvVitJSnFUMDI3VmY1aXcxYk96ZHQvLzZJCm5LZWtJSGJhNkpEWStnNEhJM2J0Z2o1WERPTnBpR0ZnTWg3aVpxc0NnWUVBM0ZtS2NXK1RZMnF3cWo5QTVJTVoKaEM5ekhhcnR6SDU0Sy91a1RlR0ZiZmQ4ME5YemVTaXNpQTBrcVNrWmdJa0piOE1pSmswZkVoa2g3Ulh5TWxFTgpBczVnOUNXc21kQk1GOUR6bnUwbTZsWmpSODVkY2NSajJ1RWZoRmt3ZzlhSGhuQ0J3MDlpVHkzamplUUdRSi9ZCk13K0lKams1c1lmMTZlQjZIUnZta29FQ2dZRUFuOStqN21ZSnlUNXEwWHlNVndRM2g0OFZabkNzUklwempza3IKOFd3K0hxUnl2M0NveHEwN0x3VkYyeUF1M2pxeXNmRHJOSHN1aml6a2lQWk51S0d1akNIUlhOUGE2bTkxRGNGMwpQTVNXY0FUSmo1c2I3aWN4T0tiR3hzYmY2dWpLcUg1TDRQdDNmSm1mMmJ3aXBLdEpsWlFkSWdUVnhOK0FoblY5CndsM1laUDhDZ1lBeTN0dEtwbWF6VnJHb3dXZFlqRjR6cyttZ3QyK3VTN3ZvMDFHVkRwQlNjRUVrTUlUelJJUHUKT1ArQTY4eFluelJPKzN5NHlPeWdJTkFKdE1Pa3Z4VUdTY1VBeEJjRkZmaEQzS0ZXY2xMRmZLN2tsb0lsVFlzQQpNNEExU0RPYTFnaTBBN3htcDAyUHhzRHBQdGNvZ042aGJLL3ltS2VwdEFnaWdtTUpaNUh1L1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRTlQzdGR4TGxMQno1aVpGQUs2eExnREFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV5TVRZeE1qTTJNRGhhRncweU16RXlNVFl4TWpNMk1EaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMXJwSVNmYUd3bldNSzlhTlJEVzNaaS9OaXgyOXNFb053ZGFZbHE1cFNYU1dHd09ITE1ZVQovc1ErSjFGYmF6cnBvai9GWW5zSXJOVGdjaENoZU5HdEJzVEdPV3p4Mzh0NHFsbXNCS1JPRkUvbWlJSUpsc2R6ClZZbWg3R3Jza05ZVURkY2loUE1weTBoa0drbEw5azkrSU1USTFBVERnN1E2V0NmZ3VTTGJGbitQUUI0cWZUMUcKYU1KOG81QVpVWVdCdDhjeDVwbWUvanVTQ3hiSmRFSTVucXZvNmZDelVMTW1BREN5ZHBYbGVpcFdqWVhVL3BETQpCMmppSkpGcDRUa1h3ZDJaZ2tkc0xYczNnZjY1bGtSWWo1cFE3L0tFMWllcHZiSkwwVWo5akNIYlp5WjYvS0ZnCm5RUW96ZVhJdTFwK2VwSXRsZUpWdXBCcGxJZEk4T29FUndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUhoNFdySFpQWW9sNlpVcTVxbFc5T0w3eVQ2NlRqWHhMUklLbHNITmF2UkgKSkN5b2tNU3FxelpZZE96M3NuOG1PRVpsTUpvZ1g4akFYYk91ZHhPRmRXcE9SOHN2T0oyMmM3bWtzYVVYeVpZQwpVVTJEZnpkSzZkMzdzV0NHYjZPbmZFOGJnYUc2NE9tVUZYOGFLMTg2aXZZRWdjSzlYYVpEczl6OW5PNzZ5NUdZCksybXNHRDZUK3k0NTRzOXhKeHNDWWZKK1ZiN0lhYlNOWGN3NkJmcHBLNGdzeFZTRWxidk14UFRaYXF6dGhReHkKNmJLZUVsZ2ZPcVA5dVdhODlqU2JwMXNsM3FjUmJLVjJYKzVzSGRma2ZFSTBiM3lEdXJUWVRkUkdOQU1BTStzagovT05LSjUvenBjSjBSSEhaVDhCSkxYZWRRK1g2U1dXSjYvck5nYnRpOTZVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRVGtEWjVNTjJpMDNIWmZQUDBPTEptekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qRTJNVEl6TmpBNFdoY05Nak14TWpFMk1USXpOakE0V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURXWkt4LzhWWnpIYmplUUQ4WjNrZ2RtdW9uMi8rKzJwWDVHSmZNZWRWUApCRVc0SGhuV2VYYVhPOFdSSEtQczUvZjhXS08xMElJMCtuMW1mdFhtS1NDOUlMc091Z3Yra0ZVVDVGYzRxRjRzCmxSV041N2pLV1h5ZG5TTE42bjBPcWpSZ1ZNWTNKbzVWc0M5S0lKSjZmRWJnUHVBcE1BL0Q2RWg2SEsrUUxDRlYKMTZEZDArOVVOUUV3dmt1NnRqSnFDdFErcVdKWittWUJDNnY0TThneFFnY2JNcWJHRkM4Zzk3eHFXY1ZNN1ZHSQpSTXRtOVgwV1pLV3lrNkZhU2Q4cDlhWkpxNzBqMCttUjFBYm9YcHZZV1k1aGJXcFVvcDVvbEpSNzN2dUE0dU1kCm02TFJRVlJwU1MvSGsyV0FIZWpuSXRaVVpEL0FNUzljVERabktyMFNLOUtuQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKQkpNZkxpb2Z3Q3hlSnN2UHI5ZnlNMFBCMk4KMHhMVTJOY0JGYzM2ejMwMm9ZOXVSWjFiV1dnU0U4RGp3MWJ5WmUwREx0VDJVelIrbnZwZk9EV0tnOUhrT1ozSgpkcE5ST3QxalVoMlhhVXMzMFk3aDVuUkJnemxSeUJvc05vTVpXWHFTcGlValhrT0ViMkl3UkNCUE50UDdiSHdqClJxQ01rTjN6cjFjcEFsT3QzTi85M0VMVWNFejFkcnNvMHRrZEJwN0VRTXRob2N0OGZOTkptTjkycTROajBVTmwKYnJXYVYyVXhSNXB3dEg2RjBrWE9NQzBDRzk0OFY4NFpOU0dFeE0xQmRaTWg2bS95TjQ4cW9Ib2ZZUE1XSG80Swo4eWc0b1BsQWZCMHYyMjRwV3kyb3l6RXI3UENIZ1VqTmtxTng3eU1NTHZRKzJLRlRMZFRFZytWQ1lJcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMW1Tc2YvRldjeDI0M2tBL0dkNUlIWnJxSjl2L3Z0cVYrUmlYekhuVlR3UkZ1QjRaCjFubDJsenZGa1J5ajdPZjMvRmlqdGRDQ05QcDlabjdWNWlrZ3ZTQzdEcm9ML3BCVkUrUlhPS2hlTEpVVmplZTQKeWxsOG5aMGl6ZXA5RHFvMFlGVEdOeWFPVmJBdlNpQ1NlbnhHNEQ3Z0tUQVB3K2hJZWh5dmtDd2hWZGVnM2RQdgpWRFVCTUw1THVyWXlhZ3JVUHFsaVdmcG1BUXVyK0RQSU1VSUhHektteGhRdklQZThhbG5GVE8xUmlFVExadlY5CkZtU2xzcE9oV2tuZktmV21TYXU5STlQcGtkUUc2RjZiMkZtT1lXMXFWS0tlYUpTVWU5NzdnT0xqSFp1aTBVRlUKYVVrdng1TmxnQjNvNXlMV1ZHUS93REV2WEV3Mlp5cTlFaXZTcHdJREFRQUJBb0lCQUNBbWtNZlBCVXZXRlRjZgpJMWRad2k3T1lIY0J3dVI0R3kxenhxL2ZSV0hJSGp4eUp5WEdxVVljckpBS1gzclRmcGpWSWhmTjRQalk1NTFMClFBQjRBblRhUjdMNXEzck5ZalROZFZjRnlMbWUwZENxQTBnMUN6OEhwWVNEdWFWTldQVnBRU0JjSTlRdHk2bXUKSU1sRmdjdDNJbDZLMnBKaWJ4d0EyVU1obXc0b05YeHNQbUpQNm9zaHJDWUF2aVpYZE1nOGxuV0dmcW4wQ0pOSQpMa3JVUXNnSldIRXZsNzJQc1ZJZFBGNTViRUlkcVJsUFA0SWhsbTlaNHFIdTRCM3U4Z1lTWkVqbDQ5U3pKanp5ClJFS3RNcVVVWnl5MXJKTEZFSGg3VGY1V2M1WXZxVzhkeUlpR0hmZlY5U3ZvdUVLU3RQK0hZUUNFTzNLWEY0aXoKYUlFS2xTRUNnWUVBL0tKM0diQi9PZlZ2dGJUK1VUSi8zajYxRnlvZmJNeHZqSFgwSjZvaXVkV2tGb3dkUG5acwpUR3VNQVdLVi9hN1ZodVBDV01rN1FIckZRRjE5U0ZsaDBicGhMUEpjVzM3OHc2UXFqYmFTNVJjeEhLSVQyaW5DClYzZkxQTFMvY2ZWaDhQRHV3NGcxbWR1anNPeERKamxGMHZxL0tyL09BLzFGaG1RRG52ZVBhR3NDZ1lFQTJUL00KUHpsRkg5SGI0NmRtdGNydXpMOXNkZzhkUEJYTmpHaEk5cDNGQjQ4M3A1cU12b1VNMzRtNnZOWi9lWG1ISmVnbgpJMjZVTFhObFRUSWJNMlQ0c0h1V2orWXZCSzVTY2d2U2YvMUZVeEJVWFlGMkNpV1FhS0hVYjZ3K2Uxbnh6K3BZCmFPbmRJZWVxbVlzTm1oQUtDUVhDcUtUNmo3MG1UbjV3aXFrUXZiVUNnWUFuWTRWQ1FoeDBBdXBaNEZCT2hKc2YKSVpQR2V0RFBlOGhnay90dk83MlNUOWIzbFB6eVFqQjhjY0F3YnhpSHB2eXZ2VThOM01JYU9Zb0xrUWY1Z2NZWQpsd0NUcTIzdTdndW16Uys5VEp2Mmova2VSNzdrb3VJa0ZROWc5YVZydFNDQ0dtNS9tZnNSZEFjL2pIYWp2UVkvCjhNeGhjK3BCQVBvWUMvdnNpeGlXNVFLQmdRQ2tMWEYyS2hxU0JHOVBhTGZYRktoSXRUVUxOenJacUlSdzRuS1oKWlB0OFRnQTZPaks0M0NXeFhRMXhIZ3l4eVdTWUFneHAyMnhCdU41S2ExNWhCYUpuQk03d3Fuekg1ZEZLZktLMAp0THRLSGFJVUUvMFhoL0hORU5kUkdYTVNseE9HRTh5Q1pKSUh5R0tGcks4M3lYMDcrazEwVTFGRGhTZEkxSWJLClV4L2lyUUtCZ0RmajhiVlB0eTM4WHJoSWR4eFMxbUsyNXppb0lWSE85eE1ZRXdLZDZRMlQyVXJIczVqQWwwR2EKeStwU0cyZjdqRFVtdjhmOTM2aVVPbFB5aytHbHVtTzBieVNLUGhGK2ErNGQ3S0pQNi9hYkxrRFF0U0hkU0RPdgorK0s4ZFc4enMyZklSeHJhZnBuRWNzZTNxbWNhblg5a3dpTXk1N21kRUdVb3JMeWo1ckhQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRVGtEWjVNTjJpMDNIWmZQUDBPTEptekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1qRTJNVEl6TmpBNFdoY05Nak14TWpFMk1USXpOakE0V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURXWkt4LzhWWnpIYmplUUQ4WjNrZ2RtdW9uMi8rKzJwWDVHSmZNZWRWUApCRVc0SGhuV2VYYVhPOFdSSEtQczUvZjhXS08xMElJMCtuMW1mdFhtS1NDOUlMc091Z3Yra0ZVVDVGYzRxRjRzCmxSV041N2pLV1h5ZG5TTE42bjBPcWpSZ1ZNWTNKbzVWc0M5S0lKSjZmRWJnUHVBcE1BL0Q2RWg2SEsrUUxDRlYKMTZEZDArOVVOUUV3dmt1NnRqSnFDdFErcVdKWittWUJDNnY0TThneFFnY2JNcWJHRkM4Zzk3eHFXY1ZNN1ZHSQpSTXRtOVgwV1pLV3lrNkZhU2Q4cDlhWkpxNzBqMCttUjFBYm9YcHZZV1k1aGJXcFVvcDVvbEpSNzN2dUE0dU1kCm02TFJRVlJwU1MvSGsyV0FIZWpuSXRaVVpEL0FNUzljVERabktyMFNLOUtuQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKQkpNZkxpb2Z3Q3hlSnN2UHI5ZnlNMFBCMk4KMHhMVTJOY0JGYzM2ejMwMm9ZOXVSWjFiV1dnU0U4RGp3MWJ5WmUwREx0VDJVelIrbnZwZk9EV0tnOUhrT1ozSgpkcE5ST3QxalVoMlhhVXMzMFk3aDVuUkJnemxSeUJvc05vTVpXWHFTcGlValhrT0ViMkl3UkNCUE50UDdiSHdqClJxQ01rTjN6cjFjcEFsT3QzTi85M0VMVWNFejFkcnNvMHRrZEJwN0VRTXRob2N0OGZOTkptTjkycTROajBVTmwKYnJXYVYyVXhSNXB3dEg2RjBrWE9NQzBDRzk0OFY4NFpOU0dFeE0xQmRaTWg2bS95TjQ4cW9Ib2ZZUE1XSG80Swo4eWc0b1BsQWZCMHYyMjRwV3kyb3l6RXI3UENIZ1VqTmtxTng3eU1NTHZRKzJLRlRMZFRFZytWQ1lJcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRV0huZGZTNDZoYWFxMC8zZmM5LzcvekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRJeE5qRXlNell3T0ZvWERUSXpNVEl4TmpFeU16WXdPRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMOHIzaFYzR1hXallxcFBIRm1DVDJyY0FYelJodUZ2bGxReFVmdkZGMHhtaStGMQpJUVlaTVJvYTE4dkt1NmQyUWxCWWpOK2JmMnM2U3VWVnYxSTI2M3ZOakVyY0FuWjg3OTk5STZjMTYxNFEvWVE0CjJINFFjcFVDdkY4OTBWSUY2SWdQWE9BODZSdGIzNXV0RlRsb21tQmpwTDY2bEZEQ1VCVG8vMUdCTTZzdklraFIKaExjTFptR1JobEVuRmtYWEdBV0RzUW5CNllkV0tBa2RVZjZRL2xKcXQ3ZUVQQUJuR2dpNmQvdHV0L1piTjFBRQpLemNiRVJ5Z3RHbDU0TTdZS2NoSEhFdUdVbWJidGk3ZURaNWUwcGw0WHQ3cnEzbzBwQTBzQUhuMFVVSXEraTdPClUxcHQrQUVSdGsxd2R4ZjBCTEZ1dWNHaUU4VldIMXVCOGJxVGM2OENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQUZ4TGN2L1kySDRXdm9yUmJzZENQemRZR055bkVPQU5sbkYKaTBkVDhpcDF0aEVCanVpU1hERmMyL2FiUmZHVk1xeEMzTWI0TjAxM3lNUm9QVk1ueFJkMzlVaFYzbmpId0V1cAorT0pnVG13SUF1aHU5eWtZMVkvVDhuZldNdTF4MUIrQWcxUWNEb3pzQS9BTmpRSmpGaU1yMmNyTXY1UzZVU2ZaCmw1dG5uSElnWkFkeGZFZ29oWXRVR2JNblYybHJkNDExWFZKVUtDdzF1THY5NW1IcWlaNU1GTmg0bDhucmozQUQKY0pmQ2tRTzF2OUh6Q0Rkektxeml3OVl1UEE4UzNic3JwdDRJanhUWDB5MXhrV254SWEva3JhSXUvZ1ZjV1JTTApnc2xsSFNUZGozYTRpR216bnluRGxsTi9QOU8wT2lKZENpVDltV3pkR0ErWjArQm8xZTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdnl2ZUZYY1pkYU5pcWs4Y1dZSlBhdHdCZk5HRzRXK1dWREZSKzhVWFRHYUw0WFVoCkJoa3hHaHJYeThxN3AzWkNVRmlNMzV0L2F6cEs1VlcvVWpicmU4Mk1TdHdDZG56djMzMGpwelhyWGhEOWhEalkKZmhCeWxRSzhYejNSVWdYb2lBOWM0RHpwRzF2Zm02MFZPV2lhWUdPa3ZycVVVTUpRRk9qL1VZRXpxeThpU0ZHRQp0d3RtWVpHR1VTY1dSZGNZQllPeENjSHBoMVlvQ1IxUi9wRCtVbXEzdDRROEFHY2FDTHAzKzI2MzlsczNVQVFyCk54c1JIS0MwYVhuZ3p0Z3B5RWNjUzRaU1p0dTJMdDRObmw3U21YaGUzdXVyZWpTa0RTd0FlZlJSUWlyNkxzNVQKV20zNEFSRzJUWEIzRi9RRXNXNjV3YUlUeFZZZlc0SHh1cE56cndJREFRQUJBb0lCQVFDbkJBUTZiSnJwazV5WApmaFllZlNJMUVaQ2JJOUxiRVVvY3RCb1VBOVNmQXRnaVdOcEpJYWtzVFZkS3pBdTErak5sVG5lRXc2MUdXTjhtCkRRdmhIK29MZDBDaUJpU0FzQlpCQW1zcm9vZkczc0VkeXl3WXR2WGtDVWZaVFlDYVVGOGV2NDA4dXZwTTFLOCsKcXJCb1AyTGY0eTRERTY2UC83TkhFV2crSk1xbk9qb2pmVEdCTlcyREl3aEg5UThNeXlMdDVNVnBoWERsL0wvMAp0aWZoWEdodG11VjIyOHlQL2lCUkhMalg3YWhTY05xazl6Q1NGU084OWlwemFud2wvaE4vYW5ieEFhSnBqalN3CkJmQXFHSnkyMGN4bzZXSmEzNVhDdzlQbk9Ka2YvTnRTVEdTZm9ZVTk2Z3prZ2JjNDdYYlh1aXRqMzZkMkNzV1gKVUNNSlJuOUJBb0dCQU1oeUdpdWdVRE15dEt6dGMzV2ZiRzNGbXBDeG9leWFaVG4zeWVoSHhBWURGYTZKUmZucwpHL0M0OUFQcGNiYzZZbGplVWh3L1VoUDFrbUxjZTBCeHQ2S2h3OXBST0lNZXJUK25tdUdDTFBYdGs0T2dUOXBMCm96QWJBcHJvbEJkMzZQTXZFM3M4dmgybFNzWEhZWE1mbW1mOFJqMEZYTW54N2VEaVN1bjNsSk5EQW9HQkFQUW4KdkxWODIyWGRqcElvMzQ1NGxpbGVZeWZ2V0NLQTdjRjAvTGxFVWZPbW9UOEtpamR3V2ZmcTlJUHVWVWV6S3V4TAo2a05LNHh3dzJTSG1MazhGeE04aEZiMW0wemFqLzRxc29TTVluVWc3WHV3VWFUQnFpMTZMbytCWmprdCtRZWU5Cmp1T0NJcFFsYVQ5ZGlkU0hRMEhtK3VkRHlWVlJhWHJPaU53VXl2a2xBb0dCQUxDU0t0R1JaL1Noenh5aUUxcGkKOUg0Q1d2VHBOVTJhZUY5SEV2cGw5WnlpTFFCUjltMkErdC9qM1RodzlQWkdIUXBSMVowQ2ZvZ01oRVpJR042ZApEZm5hYkErdUNvMGVnZGtZQ014c0FyVWs4aFE2TFAyTU1aV1h4WVMyS25ZOTc5d0E5VFZUUGRvWm1ETi9QaTNPCmdoTGwzTzIyQXBYMll1aitEcVhwclZ6SEFvR0JBSmVabU9ZRDJlTDlXQXBQRU1qUS9VUkFsRWIycVgzN0dpWFcKTXhvQ1h2UndFWTBvU1R3MUtkZnpidElBaWJsVWVhRnhYY3RjMDNuc3B0WVNxOHhyWTVITkZFZWZjaVJxWGtESQpBZUhkNWNNMUFqS0tWZW8zTGNTTjVqcG13U0VGQzMwT1NZdmdnUUlGM0x6NG9wMXhRNFRISENHL0NHTk9nclU3ClN1V0VqNmQxQW9HQVJkS2V2RWd0a2VGUU53NmFXcXFqWnBKdSthSTFvcmRxaXlRZlF3T0RldjZleG13Mlgza2IKLyt2ZGt5c21VdXk1RXBJNlZ1ODdpUG56TnlPa2FIZnpQT3lXVlp5WnIxdUdLS1dkRGg5cXY4d3QvWFhFSUh3VgpHS2VzeFQrenkwQkE0VjdDemNBcDUxanpZbDU1NVgzSzRUUkRhMkJ5NzJHbjc2cFFUOGpZU2k0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRV0huZGZTNDZoYWFxMC8zZmM5LzcvekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRJeE5qRXlNell3T0ZvWERUSXpNVEl4TmpFeU16WXdPRm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMOHIzaFYzR1hXallxcFBIRm1DVDJyY0FYelJodUZ2bGxReFVmdkZGMHhtaStGMQpJUVlaTVJvYTE4dkt1NmQyUWxCWWpOK2JmMnM2U3VWVnYxSTI2M3ZOakVyY0FuWjg3OTk5STZjMTYxNFEvWVE0CjJINFFjcFVDdkY4OTBWSUY2SWdQWE9BODZSdGIzNXV0RlRsb21tQmpwTDY2bEZEQ1VCVG8vMUdCTTZzdklraFIKaExjTFptR1JobEVuRmtYWEdBV0RzUW5CNllkV0tBa2RVZjZRL2xKcXQ3ZUVQQUJuR2dpNmQvdHV0L1piTjFBRQpLemNiRVJ5Z3RHbDU0TTdZS2NoSEhFdUdVbWJidGk3ZURaNWUwcGw0WHQ3cnEzbzBwQTBzQUhuMFVVSXEraTdPClUxcHQrQUVSdGsxd2R4ZjBCTEZ1dWNHaUU4VldIMXVCOGJxVGM2OENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQUZ4TGN2L1kySDRXdm9yUmJzZENQemRZR055bkVPQU5sbkYKaTBkVDhpcDF0aEVCanVpU1hERmMyL2FiUmZHVk1xeEMzTWI0TjAxM3lNUm9QVk1ueFJkMzlVaFYzbmpId0V1cAorT0pnVG13SUF1aHU5eWtZMVkvVDhuZldNdTF4MUIrQWcxUWNEb3pzQS9BTmpRSmpGaU1yMmNyTXY1UzZVU2ZaCmw1dG5uSElnWkFkeGZFZ29oWXRVR2JNblYybHJkNDExWFZKVUtDdzF1THY5NW1IcWlaNU1GTmg0bDhucmozQUQKY0pmQ2tRTzF2OUh6Q0Rkektxeml3OVl1UEE4UzNic3JwdDRJanhUWDB5MXhrV254SWEva3JhSXUvZ1ZjV1JTTApnc2xsSFNUZGozYTRpR216bnluRGxsTi9QOU8wT2lKZENpVDltV3pkR0ErWjArQm8xZTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.2
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEyMTYxMjM1NThaFw0yMzEyMTYxMjM2MThaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEGOXX6SznxBMKw+O5zJ8QQ63iA0/lXmwnTMwRTp1yHCc1f8FL77EQO1K4JUsT
            H+ctJGMhY32WUowPwwnyOPIwB6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSVeGItOmpqAEC7kc+Om5P2R2IYzDAKBggqhkjOPQQDAgNJADBGAiEA3eaIxC+D
            qEV/Qx3gfHNXLiVcJ6Qjc48iN595+irZDncCIQC1zG/N0m6QjLEdGqmJWwzTp3w2
            hNS6t3SIpNl5NgT2uw==
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEyMTYxMjM1NThaFw0yMzEyMTYxMjM2MThaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEGOXX6SznxBMKw+O5zJ8QQ63iA0/lXmwnTMwRTp1yHCc1f8FL77EQO1K4JUsT
      H+ctJGMhY32WUowPwwnyOPIwB6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSVeGItOmpqAEC7kc+Om5P2R2IYzDAKBggqhkjOPQQDAgNJADBGAiEA3eaIxC+D
      qEV/Qx3gfHNXLiVcJ6Qjc48iN595+irZDncCIQC1zG/N0m6QjLEdGqmJWwzTp3w2
      hNS6t3SIpNl5NgT2uw==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.2
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TVRZeE1qTTFOVGhhRncweU16RXlNVFl4TWpNMk1UaGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVHT1hYNlN6bnhCTUt3K081eko4UVE2M2lBMC9sWG13blRNd1JUcDF5SENjMWY4Rkw3N0VRTzFLNEpVc1QKSCtjdEpHTWhZMzJXVW93UHd3bnlPUEl3QjZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU1ZlR0l0T21wcUFFQzdrYytPbTVQMlIySVl6REFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBM2VhSXhDK0QKcUVWL1F4M2dmSE5YTGlWY0o2UWpjNDhpTjU5NStpclpEbmNDSVFDMXpHL04wbTZRakxFZEdxbUpXd3pUcDN3MgpoTlM2dDNTSXBObDVOZ1QydXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5zOEkzbFc2a3kwcXVCbGlyNUY1VHF1MjVHYUU3ZVplTUpqZDd5Skt2ZFdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR09YWDZTem54Qk1LdytPNXpKOFFRNjNpQTAvbFhtd25UTXdSVHAxeUhDYzFmOEZMNzdFUQpPMUs0SlVzVEgrY3RKR01oWTMyV1Vvd1B3d255T1BJd0J3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEyMTYxMjM1NThaFw0yMzEyMTYxMjM2MThaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEGOXX6SznxBMKw+O5zJ8QQ63iA0/lXmwnTMwRTp1yHCc1f8FL77EQO1K4JUsT
    H+ctJGMhY32WUowPwwnyOPIwB6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSVeGItOmpqAEC7kc+Om5P2R2IYzDAKBggqhkjOPQQDAgNJADBGAiEA3eaIxC+D
    qEV/Qx3gfHNXLiVcJ6Qjc48iN595+irZDncCIQC1zG/N0m6QjLEdGqmJWwzTp3w2
    hNS6t3SIpNl5NgT2uw==
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
    fleet: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
      fleet: linkerd
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 86e137eb15a639c9fe67de3838872a5b2eab8a8be0e32013963f614f56d440b1
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
        fleet: linkerd
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
    fleet: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
      fleet: linkerd
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 86e137eb15a639c9fe67de3838872a5b2eab8a8be0e32013963f614f56d440b1
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
        fleet: linkerd
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
spec:
  concurrencyPolicy: Replace
  schedule: "46 12 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.2
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.2
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
    fleet: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
      fleet: linkerd
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.2
        linkerd.io/proxy-version: stable-2.12.2
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 86e137eb15a639c9fe67de3838872a5b2eab8a8be0e32013963f614f56d440b1
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
        fleet: linkerd
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.2
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TVRZeE1qTTFOVGhhRncweU16RXlNVFl4TWpNMk1UaGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFR09YWDZTem54Qk1LdytPNXpKOFFRNjNpQTAvbFhtd25UTXdSVHAxeUhDYzFmOEZMNzdFUU8xSzRKVXNUCiAgICAgICAgSCtjdEpHTWhZMzJXVW93UHd3bnlPUEl3QjZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlNWZUdJdE9tcHFBRUM3a2MrT201UDJSMklZekRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTNlYUl4QytECiAgICAgICAgcUVWL1F4M2dmSE5YTGlWY0o2UWpjNDhpTjU5NStpclpEbmNDSVFDMXpHL04wbTZRakxFZEdxbUpXd3pUcDN3MgogICAgICAgIGhOUzZ0M1NJcE5sNU5nVDJ1dz09CiAgICAgICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgICBrZXlQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIEVDIFBSSVZBVEUgS0VZLS0tLS0KICAgICAgICBNSGNDQVFFRUlOczhJM2xXNmt5MHF1QmxpcjVGNVRxdTI1R2FFN2VaZU1KamQ3eUpLdmRXb0FvR0NDcUdTTTQ5CiAgICAgICAgQXdFSG9VUURRZ0FFR09YWDZTem54Qk1LdytPNXpKOFFRNjNpQTAvbFhtd25UTXdSVHAxeUhDYzFmOEZMNzdFUQogICAgICAgIE8xSzRKVXNUSCtjdEpHTWhZMzJXVW93UHd3bnlPUEl3Qnc9PQogICAgICAgIC0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0KaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV5TVRZeE1qTTFOVGhhRncweU16RXlNVFl4TWpNMk1UaGFNQnd4R2pBWQogIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICBRZ0FFR09YWDZTem54Qk1LdytPNXpKOFFRNjNpQTAvbFhtd25UTXdSVHAxeUhDYzFmOEZMNzdFUU8xSzRKVXNUCiAgSCtjdEpHTWhZMzJXVW93UHd3bnlPUEl3QjZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICBCQlNWZUdJdE9tcHFBRUM3a2MrT201UDJSMklZekRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTNlYUl4QytECiAgcUVWL1F4M2dmSE5YTGlWY0o2UWpjNDhpTjU5NStpclpEbmNDSVFDMXpHL04wbTZRakxFZEdxbUpXd3pUcDN3MgogIGhOUzZ0M1NJcE5sNU5nVDJ1dz09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
